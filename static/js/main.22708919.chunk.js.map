{"version":3,"sources":["components/profile/Profile.js","components/social-data/Social-data.js","components/friends/friendItem.js","components/friends/friendsList.js","components/transactionHistory/TransactionHistory.js","App.js","index.js"],"names":["Profile","avatar","name","tag","location","stats","class","src","alt","followers","views","likes","SocialData","title","map","stat","label","percentage","id","FriendsItem","isOnline","width","FriendsList","friends","friend","TransactionHistory","items","item","type","amount","currency","console","log","transJson","App","user","socialDataJson","friendJson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gxGAqDeA,EA/CD,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,IAAKC,EAArB,EAAqBA,SAASC,EAA9B,EAA8BA,MAA9B,OACZ,sBAAKC,MAAM,UAAX,UACA,sBAAKA,MAAM,cAAX,UACE,qBACEC,IAAKN,EACLO,IAAI,gHACJF,MAAM,WAER,mBAAGA,MAAM,OAAT,SAAiBJ,IACjB,mBAAGI,MAAM,MAAT,SAAgBH,IAChB,mBAAGG,MAAM,WAAT,SAAqBF,OAGvB,qBAAIE,MAAM,QAAV,UACE,+BACE,sBAAMA,MAAM,QAAZ,uBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMI,eAEhC,+BACE,sBAAMH,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMK,WAEhC,+BACE,sBAAMJ,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMM,kB,OCErBC,EA7BE,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMR,EAAS,EAATA,MACrB,OAAO,0BAASC,MAAM,aAAf,UACLO,GAAS,oBAAIP,MAAM,QAAV,SAAmBO,IAG9B,oBAAIP,MAAM,YAAV,SACKD,EAAMS,KAAI,SAACC,GAAD,OACP,qBAAIT,MAAM,OAAV,UACA,sBAAMA,MAAM,QAAZ,SAAqBS,EAAKC,QAC1B,uBAAMV,MAAM,aAAZ,UAA0BS,EAAKE,WAA/B,SAFsBF,EAAKG,a,OCiBxBC,EAtBG,SAAC,GAAD,IAAElB,EAAF,EAAEA,OAAOC,EAAT,EAASA,KAAKkB,EAAd,EAAcA,SAAd,OACd,gCACF,sBAAMd,MAAM,SAAZ,SAAsBc,IAGpB,qBAAKd,MAAM,SAASC,IAAKN,EAAQO,IAAI,OAAOa,MAAM,OAClD,mBAAGf,MAAM,OAAT,SAAiBJ,QCWNoB,EAlBG,SAAC,GAAa,IAAZC,EAAW,EAAXA,QAEZ,OAAO,6BACPA,EAAQT,KAAI,SAACU,GAAD,OACZ,oBAAoBlB,MAAM,OAA1B,SACI,cAAC,EAAD,CAAaL,OAAQuB,EAAOvB,OAAQC,KAAMsB,EAAOtB,KAAMkB,SAAUI,EAAOJ,SAAUF,GAAIM,EAAON,MADxFM,EAAON,U,OCmCTO,EAtCU,SAAC,GAAW,IAAVC,EAAS,EAATA,MAEvB,OAAO,kCACH,gCACJ,+BACE,sCACA,wCACA,+CAGE,gCACAA,EAAMZ,KAAI,SAACa,GAAD,OACN,+BACA,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,SACV,6BAAKF,EAAKG,aAHDH,EAAKT,a,OCR1Ba,QAAQC,IAAIC,GAqBGC,MAlBf,WACE,OACE,gCACE,sLACA,cAAC,EAAD,CACJhC,KAAMiC,EAAKjC,KACXC,IAAKgC,EAAKhC,IACVC,SAAU+B,EAAK/B,SACfH,OAAQkC,EAAKlC,OACbI,MAAO8B,EAAK9B,QAET,cAAC,EAAD,CAAaQ,MAAM,eAAeR,MAAO+B,IACzC,cAAC,EAAD,CAAab,QAASc,IACtB,cAAC,EAAD,CAAoBX,MAAOO,QCnBhCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.22708919.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\nconst Profile=({avatar, name, tag, location,stats})=>(\r\n  <div class=\"profile\">\r\n  <div class=\"description\">\r\n    <img\r\n      src={avatar}\r\n      alt=\"Аватар пользователя\"\r\n      class=\"avatar\"\r\n    />\r\n    <p class=\"name\">{name}</p>\r\n    <p class=\"tag\">{tag}</p>\r\n    <p class=\"location\">{location}</p>\r\n  </div>\r\n\r\n  <ul class=\"stats\">\r\n    <li>\r\n      <span class=\"label\">Followers</span>\r\n      <span class=\"quantity\">{stats.followers}</span>\r\n    </li>\r\n    <li>\r\n      <span class=\"label\">Views</span>\r\n      <span class=\"quantity\">{stats.views}</span>\r\n    </li>\r\n    <li>\r\n      <span class=\"label\">Likes</span>\r\n      <span class=\"quantity\">{stats.likes}</span>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n)\r\n\r\n Profile.propTypes ={\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers:PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired\r\n  }).isRequired\r\n }\r\n \r\n  \r\n \r\n\r\n\r\nexport default Profile","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SocialData=({title,stats})=>{\r\n    return <section class=\"statistics\">\r\n     {title && <h2 class=\"title\">{title}</h2>}\r\n    \r\n  \r\n    <ul class=\"stat-list\">\r\n        {stats.map((stat)=>(\r\n            <li class=\"item\" key={stat.id}>\r\n            <span class=\"label\">{stat.label}</span>\r\n            <span class=\"percentage\">{stat.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      \r\n    </ul>\r\n  </section>\r\n}\r\n\r\nSocialData.propTypes ={\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label:PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired\r\n\r\n    })).isRequired\r\n  \r\n \r\n   }\r\n\r\nexport default SocialData;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nconst FriendsItem=({avatar,name,isOnline})=>(\r\n    <div>\r\n  <span class=\"status\">{isOnline}</span>\r\n  \r\n   \r\n    <img class=\"avatar\" src={avatar} alt=\"name\" width=\"48\" />\r\n    <p class=\"name\">{name}</p>\r\n</div>)\r\n    \r\n    \r\n\r\n    \r\n    \r\n \r\n\r\nFriendsItem.propTypes={\r\n    \r\n    name: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n\r\n}\r\nexport default FriendsItem;","import React from 'react'\r\nimport FriendsItem from './friendItem'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst FriendsList=({friends})=>{\r\n    \r\n        return <ul>{\r\n        friends.map((friend)=>(\r\n        <li key={friend.id} class=\"item\">\r\n            <FriendsItem avatar={friend.avatar} name={friend.name} isOnline={friend.isOnline} id={friend.id}/>\r\n            </li>))}\r\n    </ul>\r\n\r\n     \r\n   }\r\nFriendsList.propTypes={\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.node.isRequired,\r\n        })\r\n    ).isRequired\r\n}\r\nexport default FriendsList;\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nconst TransactionHistory=({items})=>{\r\n   \r\n    return <table>\r\n        <thead>\r\n    <tr>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </thead>\r\n        <tbody>{\r\n        items.map((item)=>(\r\n            <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n            </tr>\r\n\r\n        )\r\n       \r\n        )}\r\n        </tbody>\r\n\r\n    </table>\r\n}\r\n   \r\nTransactionHistory.propTypes={\r\n    items:PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id:PropTypes.string.isRequired,\r\n            type:PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,}\r\n\r\n        ).isRequired\r\n    ).isRequired\r\n}\r\n\r\nexport default TransactionHistory;","import React from 'react';\nimport Profile from './components/profile/Profile'\nimport user from './components/profile/user.json'\nimport SocialData from './components/social-data/Social-data'\nimport socialDataJson from './components/social-data/social-data.json'\nimport FriendsList from './components/friends/friendsList'\nimport friendJson from './components/friends/friends.json'\nimport TransactionHistory from './components/transactionHistory/TransactionHistory'\nimport transJson from './components/transactionHistory/transactionHistory.json'\nconsole.log(transJson)\n\n\nfunction App() {\n  return (\n    <div>\n      <h1>Это мое приложение на реакте</h1>\n      <Profile \n  name={user.name}\n  tag={user.tag}\n  location={user.location}\n  avatar={user.avatar}\n  stats={user.stats}\n/>\n     <SocialData  title=\"Upload stats\" stats={socialDataJson}/>\n     <FriendsList friends={friendJson} /> \n     <TransactionHistory items={transJson} /> \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}